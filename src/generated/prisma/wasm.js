
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.0
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.0",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  telefone: 'telefone',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  construtoraId: 'construtoraId'
};

exports.Prisma.ConstrutoraScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cnpj: 'cnpj',
  telefone: 'telefone',
  email: 'email',
  endereco: 'endereco',
  ativa: 'ativa',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ImovelScalarFieldEnum = {
  id: 'id',
  idExternoAPI: 'idExternoAPI',
  titulo: 'titulo',
  descricao: 'descricao',
  preco: 'preco',
  area: 'area',
  quartos: 'quartos',
  banheiros: 'banheiros',
  vagas: 'vagas',
  latitude: 'latitude',
  longitude: 'longitude',
  telefoneContato: 'telefoneContato',
  endereco: 'endereco',
  fotoPrincipal: 'fotoPrincipal',
  galeriaFotos: 'galeriaFotos',
  caracteristicas: 'caracteristicas',
  caracteristicasArray: 'caracteristicasArray',
  tipoImovel: 'tipoImovel',
  status: 'status',
  ativo: 'ativo',
  destaque: 'destaque',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  construtoraId: 'construtoraId'
};

exports.Prisma.PerguntaScalarFieldEnum = {
  id: 'id',
  texto: 'texto',
  tipo: 'tipo',
  opcoes: 'opcoes',
  ordem: 'ordem',
  categoria: 'categoria',
  fluxo: 'fluxo',
  pontuacao: 'pontuacao',
  obrigatoria: 'obrigatoria',
  condicional: 'condicional',
  geradaPorIA: 'geradaPorIA',
  ativa: 'ativa',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RespostaScalarFieldEnum = {
  id: 'id',
  valor: 'valor',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  perguntaId: 'perguntaId',
  userId: 'userId'
};

exports.Prisma.MatchScalarFieldEnum = {
  id: 'id',
  porcentagem: 'porcentagem',
  posicaoRanking: 'posicaoRanking',
  destaque: 'destaque',
  criterios: 'criterios',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  imovelId: 'imovelId',
  relatorioId: 'relatorioId'
};

exports.Prisma.RelatorioScalarFieldEnum = {
  id: 'id',
  resumo: 'resumo',
  pdfUrl: 'pdfUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.ConfiguracaoScalarFieldEnum = {
  id: 'id',
  chave: 'chave',
  valor: 'valor',
  descricao: 'descricao',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LogIntegracaoScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  status: 'status',
  request: 'request',
  response: 'response',
  erro: 'erro',
  createdAt: 'createdAt'
};

exports.Prisma.ImovelMetadataScalarFieldEnum = {
  id: 'id',
  imovelIdExterno: 'imovelIdExterno',
  telefone: 'telefone',
  observacoes: 'observacoes',
  construtoraId: 'construtoraId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ImovelPerguntaScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  imovelId: 'imovelId',
  perguntaId: 'perguntaId'
};

exports.Prisma.MensagemContatoScalarFieldEnum = {
  id: 'id',
  texto: 'texto',
  resposta: 'resposta',
  usuarioNome: 'usuarioNome',
  usuarioEmail: 'usuarioEmail',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AIConversationScalarFieldEnum = {
  id: 'id',
  messages: 'messages',
  userId: 'userId',
  sessionId: 'sessionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AIActionHistoryScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  acao: 'acao',
  entidade: 'entidade',
  idEntidade: 'idEntidade',
  timestamp: 'timestamp',
  status: 'status',
  detalhes: 'detalhes'
};

exports.Prisma.AIConfigScalarFieldEnum = {
  id: 'id',
  chave: 'chave',
  valor: 'valor',
  descricao: 'descricao',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  CONSTRUTORA: 'CONSTRUTORA',
  CLIENTE: 'CLIENTE'
};

exports.Prisma.ModelName = {
  User: 'User',
  Construtora: 'Construtora',
  Imovel: 'Imovel',
  Pergunta: 'Pergunta',
  Resposta: 'Resposta',
  Match: 'Match',
  Relatorio: 'Relatorio',
  Configuracao: 'Configuracao',
  LogIntegracao: 'LogIntegracao',
  ImovelMetadata: 'ImovelMetadata',
  ImovelPergunta: 'ImovelPergunta',
  MensagemContato: 'MensagemContato',
  AIConversation: 'AIConversation',
  AIActionHistory: 'AIActionHistory',
  AIConfig: 'AIConfig'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
